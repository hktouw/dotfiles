set-option -g default-command "reattach-to-user-namespace -l bash"

setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# act like GNU screen
# change leader here
unbind C-b
set -g prefix C-Space

# Move Window to left or Right
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

#Move Pane to left or right
bind-key -n C-S-0 swap-pane -U
bind-key -n C-S-L swap-pane -D

#Tab through windows
bind-key C-Tab next-window
bind-key C-S-Tab previous-window

#Split Screen
bind-key -n C-S-U split-window -v
bind-key -n C-S-I split-window -h


# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# enable copy-paste http://goo.gl/DN82E
# enable RubyMotion http://goo.gl/WDlCy
# set -g default-command "reattach-to-user-namespace -l bash"

# ----------------------
# set some pretty colors
# ----------------------

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# no active pane highlighting
set-option -g pane-active-border-fg default

# ----------------------
# Status Bar
# -----------------------

# set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on

# set color for status bar
set-option -g status-bg default
set-option -g status-fg default
set-option -g status-attr dim

set -g status-bg '#000000'

# set window list color for active window
set-window-option -g window-status-current-fg colour69 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# remove left side of status bar
set -g status-left-length 100
set -g status-left "#S"

# show session name, window & pane number, date and time on right side of status bar
set -g status-right-length 60
set -g status-right "#[fg=yellow]%b %d #[fg=green]%l:%M %p"
